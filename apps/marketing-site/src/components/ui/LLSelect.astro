---
export interface Option {
  value: string;
  label: string;
}
export interface Props {
  id?: string;
  name: string;
  label?: string;
  options: Option[];
  value?: string;
  placeholder?: string;
  error?: string;
  help?: string;
  required?: boolean;
  disabled?: boolean;
  full?: boolean;
}
const p = Astro.props as Props;
const id = p.id || p.name;
---

<div class={`form-control ${p.full ? "w-full" : ""}`} data-field>
  {
    p.label && (
      <label for={id} class="label">
        <span class="label-text font-medium">
          {p.label}
          {p.required && <span class="text-error ml-0.5">*</span>}
        </span>
      </label>
    )
  }
  <select
    id={id}
    name={p.name}
    class={`select select-bordered ${p.error ? "select-error" : ""}`}
    required={p.required}
    disabled={p.disabled}
    aria-invalid={!!p.error}
    aria-describedby={p.help ? `${id}-help` : undefined}
  >
    {
      p.placeholder && (
        <option value="" selected={!p.value}>
          {p.placeholder}
        </option>
      )
    }
    {
      p.options.map((o) => (
        <option value={o.value} selected={p.value === o.value}>
          {o.label}
        </option>
      ))
    }
  </select>
  {
    p.help && (
      <div id={`${id}-help`} class="label">
        <span class="label-text-alt opacity-70">{p.help}</span>
      </div>
    )
  }
  {
    p.error && (
      <p class="mt-1 text-sm text-error" role="alert">
        {p.error}
      </p>
    )
  }
</div>
