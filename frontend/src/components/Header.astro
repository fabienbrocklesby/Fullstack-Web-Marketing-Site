---

---

<header class="navbar bg-base-100 shadow-lg border-b border-base-200">
  <div class="navbar-start">
    <div class="dropdown">
      <button
        id="mobile-menu-toggle"
        type="button"
        class="btn btn-ghost lg:hidden"
        aria-label="Toggle navigation menu"
        aria-controls="mobile-menu"
        aria-expanded="false"
        tabindex="0"
        role="button"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-5 w-5"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h8m-8 6h16"></path>
        </svg>
      </button>
      <!-- Mobile Menu -->
      <ul
        tabindex="0"
        class="menu menu-sm dropdown-content mt-3 z-[1] p-2 shadow bg-base-100 rounded-box w-52"
        id="mobile-menu"
      >
        <li><a href="/" class="text-base">Home</a></li>
        <li><a href="/pricing" class="text-base">Pricing</a></li>
        <li><a href="/blog" class="text-base">Blog</a></li>
        <li><a href="/contact" class="text-base">Contact</a></li>

        <!-- Default Mobile Menu (shown when not authenticated) -->
        <li class="border-t border-base-200 mt-2 pt-2 auth-default">
          <a
            href="/customer/login"
            class="btn btn-primary btn-sm mt-1 w-full justify-center">Login</a
          >
          <a
            href="/customer/register"
            class="btn btn-ghost btn-sm mt-2 w-full justify-center"
            >Create Account</a
          >
        </li>

        <!-- Customer Mobile Menu (shown when customer is authenticated) -->
        <li
          class="border-t border-base-200 mt-2 pt-2 auth-customer"
          style="display: none;"
        >
          <a href="/customer/dashboard" class="text-base">Dashboard</a>
        </li>
        <li class="auth-customer" style="display: none;">
          <a href="/customer/profile" class="text-base">Profile</a>
        </li>
        <li class="auth-customer" style="display: none;">
          <button class="btn btn-ghost btn-sm mt-2 logout-btn">Logout</button>
        </li>

        <!-- Affiliate Mobile Menu (shown when affiliate is authenticated) -->
        <li
          class="border-t border-base-200 mt-2 pt-2 auth-affiliate"
          style="display: none;"
        >
          <a href="/dashboard" class="text-base">Dashboard</a>
        </li>
        <li class="auth-affiliate" style="display: none;">
          <button class="btn btn-ghost btn-sm mt-2 logout-btn">Logout</button>
        </li>
      </ul>
    </div>
    <a href="/" class="flex items-center gap-2 px-2 flex-shrink-0">
      <picture class="h-10 flex items-center flex-shrink-0">
        <!-- WebP first -->
        <source
          srcset="https://publicassets.lightlane.app/LightLane(WEBP).webp"
          type="image/webp"
        />
        <!-- SVG fallback -->
        <img
          src="https://publicassets.lightlane.app/LightLane(SVG).svg"
          alt="Lightlane"
          class="h-10 w-auto flex-shrink-0"
          loading="eager"
          decoding="async"
        />
      </picture>
    </a>
  </div>

  <div class="navbar-center hidden lg:flex">
    <ul class="menu menu-horizontal px-1 gap-1">
      <li><a href="/" class="btn btn-ghost btn-sm">Home</a></li>
      <li><a href="/pricing" class="btn btn-ghost btn-sm">Pricing</a></li>
      <li><a href="/blog" class="btn btn-ghost btn-sm">Blog</a></li>
      <li><a href="/contact" class="btn btn-ghost btn-sm">Contact</a></li>
    </ul>
  </div>

  <!-- Desktop Menu -->
  <div
    class="navbar-end hidden lg:flex gap-2 items-center pr-2"
    id="desktop-menu"
  >
    <!-- Default Desktop Menu (shown when not authenticated) -->
    <div class="auth-default items-center gap-2" style="display: none;">
      <a href="/customer/login" class="btn btn-ghost btn-sm">Login</a>
      <a href="/customer/register" class="btn btn-ghost btn-sm"
        >Create Account</a
      >
      <a href="/pricing" class="btn btn-gradient btn-sm lg:inline-flex"
        >Buy Now</a
      >
    </div>

    <!-- Customer Desktop Menu (shown when customer is authenticated) -->
    <div class="auth-customer gap-2" style="display: none;">
      <div class="dropdown dropdown-end">
        <div tabindex="0" role="button" class="btn btn-ghost btn-sm">
          <span id="customer-name">Customer</span>
          <svg
            class="w-4 h-4 ml-1"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M19 9l-7 7-7-7"></path>
          </svg>
        </div>
        <ul
          tabindex="0"
          class="dropdown-content z-[1] menu p-2 shadow bg-base-100 rounded-box w-52"
        >
          <li><a href="/customer/dashboard">Dashboard</a></li>
          <li><a href="/customer/profile">Profile</a></li>
          <li class="border-t border-base-200 mt-1 pt-1">
            <button class="logout-btn">Logout</button>
          </li>
        </ul>
      </div>
    </div>

    <!-- Affiliate Desktop Menu (shown when affiliate is authenticated) -->
    <div class="auth-affiliate gap-2" style="display: none;">
      <div class="dropdown dropdown-end">
        <div tabindex="0" role="button" class="btn btn-ghost btn-sm">
          <span id="affiliate-name">Affiliate</span>
          <svg
            class="w-4 h-4 ml-1"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M19 9l-7 7-7-7"></path>
          </svg>
        </div>
        <ul
          tabindex="0"
          class="dropdown-content z-[1] menu p-2 shadow bg-base-100 rounded-box w-52"
        >
          <li><a href="/dashboard">Dashboard</a></li>
          <li class="border-t border-base-200 mt-1 pt-1">
            <button class="logout-btn">Logout</button>
          </li>
        </ul>
      </div>
    </div>
  </div>
</header>

<script>
  // Authentication state manager for the header (vanilla JS)
  class HeaderAuthManager {
    constructor() {
      this.init();
    }

    init() {
      this.updateNavbarBasedOnAuth();
      this.setupLogoutHandlers();
    }

    updateNavbarBasedOnAuth() {
      const customerToken = localStorage.getItem("customerToken");
      const affiliateJWT = localStorage.getItem("jwt");
      const customer = this.parseJSONSafely(localStorage.getItem("customer"));
      const user = this.parseJSONSafely(localStorage.getItem("user"));

      // Hide all auth sections first
      this.hideAllAuthSections();

      if (customerToken && customer) {
        this.showCustomerUI(customer);
        console.log("🔐 Customer authenticated:", customer.email);
      } else if (affiliateJWT && user) {
        this.showAffiliateUI(user);
        console.log("🔐 Affiliate authenticated:", user.email);
      } else {
        this.showDefaultUI();
        console.log("🔓 No authentication found");
      }
    }

    hideAllAuthSections() {
      const sections = [".auth-default", ".auth-customer", ".auth-affiliate"];
      sections.forEach((selector) => {
        document.querySelectorAll(selector).forEach((el) => {
          el.classList.add("hidden");
        });
      });
    }

    showDefaultUI() {
      document.querySelectorAll(".auth-default").forEach((el) => {
        el.classList.remove("hidden");
        el.classList.add("flex");
      });
    }

    showCustomerUI(customer) {
      document.querySelectorAll(".auth-customer").forEach((el) => {
        el.classList.remove("hidden");
        el.classList.add("flex");
      });
      const customerNameEl = document.getElementById("customer-name");
      if (customerNameEl && customer) {
        const displayName = customer.firstName
          ? `${customer.firstName} ${customer.lastName || ""}`.trim()
          : customer.email;
        customerNameEl.textContent = displayName;
      }
    }

    showAffiliateUI(user) {
      document.querySelectorAll(".auth-affiliate").forEach((el) => {
        el.classList.remove("hidden");
        el.classList.add("flex");
      });
      const affiliateNameEl = document.getElementById("affiliate-name");
      if (affiliateNameEl && user) {
        const displayName = user.username || user.email;
        affiliateNameEl.textContent = displayName;
      }
    }

    setupLogoutHandlers() {
      document.querySelectorAll(".logout-btn").forEach((btn) => {
        btn.addEventListener("click", (e) => {
          e.preventDefault();
          this.handleLogout();
        });
      });
    }

    handleLogout() {
      localStorage.removeItem("customerToken");
      localStorage.removeItem("customer");
      localStorage.removeItem("jwt");
      localStorage.removeItem("user");
      console.log("🚪 User logged out");
      window.location.href = "/";
    }

    parseJSONSafely(str) {
      try {
        return str ? JSON.parse(str) : null;
      } catch (e) {
        return null;
      }
    }
  }

  // Initialize when DOM is loaded
  document.addEventListener("DOMContentLoaded", () => {
    new HeaderAuthManager();

    // Mobile dropdown toggle (DaisyUI)
    const mobileToggle = document.querySelector(
      '[aria-controls="mobile-menu"]',
    );
    const dropdown = mobileToggle ? mobileToggle.closest(".dropdown") : null;
    const menu = document.getElementById("mobile-menu");
    if (mobileToggle && dropdown && menu) {
      const setExpanded = (expanded) => {
        mobileToggle.setAttribute("aria-expanded", String(expanded));
        if (expanded) dropdown.classList.add("dropdown-open");
        else dropdown.classList.remove("dropdown-open");
      };

      mobileToggle.addEventListener("click", (e) => {
        e.preventDefault();
        const expanded = mobileToggle.getAttribute("aria-expanded") === "true";
        setExpanded(!expanded);
      });

      // Close on outside click
      document.addEventListener("click", (event) => {
        const t = event.target;
        if (!(t instanceof Node) || !dropdown.contains(t)) {
          setExpanded(false);
        }
      });

      // Close when a menu item is clicked
      menu.querySelectorAll("a, button").forEach((el) => {
        el.addEventListener("click", () => setExpanded(false));
      });

      // Close on Escape
      document.addEventListener("keydown", (e) => {
        if (e.key === "Escape") setExpanded(false);
      });
    }
  });

  // Re-check auth state when localStorage changes (for cross-tab sync)
  window.addEventListener("storage", () => {
    new HeaderAuthManager();
  });

  // Re-check auth state when page becomes visible (for tab switching)
  document.addEventListener("visibilitychange", () => {
    if (!document.hidden) {
      new HeaderAuthManager();
    }
  });
</script>
