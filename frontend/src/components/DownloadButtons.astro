---
interface Props {
  size?: "xs" | "sm" | "md" | "lg" | "xl";
  soft?: boolean; // use btn-soft instead of solid
  showChecksums?: boolean;
  align?: "left" | "center" | "right";
  class?: string;
}
const {
  size = "sm",
  soft = true,
  showChecksums = true,
  align = "left",
  class: klass = "",
} = Astro.props as Props;

const DOWNLOAD_BASE_URL = "https://downloads.lightlane.app";
const fallbackVersion = "v1.0.0";
// @ts-ignore - Astro injects env at build time
const rawVersion = import.meta.env?.PUBLIC_DOWNLOAD_VERSION ?? fallbackVersion;
const normalizedVersion = rawVersion.trim().replace(/^\/+|\/+$/g, "");
const resolvedVersion =
  normalizedVersion.length > 0 ? normalizedVersion : fallbackVersion;
const baseUrl = `${DOWNLOAD_BASE_URL.replace(/\/$/, "")}/${resolvedVersion}`;
const macHref = `${baseUrl}/Light-Lane-macOS.zip`;
const windowsHref = `${baseUrl}/Light-Lane-Windows.zip`;
const checksumsHref = `${baseUrl}/SHA256SUMS.txt`;
---

<div
  class={`flex flex-wrap gap-2 ${align === "center" ? "justify-center" : align === "right" ? "justify-end" : ""} ${klass}`}
>
  <a
    id="dl-mac"
    class={`btn ${soft ? "btn-soft" : "btn-primary"} btn-${size}`}
    href={macHref}>Download macOS</a
  >
  <a
    id="dl-win"
    class={`btn ${soft ? "btn-soft" : "btn-primary"} btn-${size}`}
    href={windowsHref}>Download Windows</a
  >
  {
    showChecksums && (
      <a id="dl-sums" class={`btn btn-ghost btn-${size}`} href={checksumsHref}>
        Checksums
      </a>
    )
  }
</div>
