---
import Layout from "../../layouts/Layout.astro";
---

<Layout title="Customer Registration">
  <main class="hero min-h-screen bg-base-200">
    <div class="hero-content text-center">
      <div class="max-w-md">
        <div class="card w-full max-w-sm shadow-2xl bg-base-100">
          <div class="card-body">
            <h1 class="text-2xl font-bold mb-6">Create Customer Account</h1>
            <form id="register-form">
              <div class="form-control">
                <label class="label">
                  <span class="label-text">First Name</span>
                </label>
                <input
                  type="text"
                  id="firstName"
                  placeholder="First Name"
                  class="input input-bordered"
                  required
                />
              </div>
              <div class="form-control">
                <label class="label">
                  <span class="label-text">Last Name</span>
                </label>
                <input
                  type="text"
                  id="lastName"
                  placeholder="Last Name"
                  class="input input-bordered"
                  required
                />
              </div>
              <div class="form-control">
                <label class="label">
                  <span class="label-text">Email</span>
                </label>
                <input
                  type="email"
                  id="email"
                  placeholder="email@example.com"
                  class="input input-bordered"
                  required
                />
              </div>
              <div class="form-control">
                <label class="label">
                  <span class="label-text">Password</span>
                </label>
                <input
                  type="password"
                  id="password"
                  placeholder="password"
                  class="input input-bordered"
                  required
                />
              </div>
              <div class="form-control">
                <label class="label">
                  <span class="label-text">Confirm Password</span>
                </label>
                <input
                  type="password"
                  id="confirmPassword"
                  placeholder="confirm password"
                  class="input input-bordered"
                  required
                />
              </div>
              <div class="form-control mt-6">
                <button type="submit" class="btn btn-primary"
                  >Create Account</button
                >
              </div>
            </form>
            <div id="error-message" class="alert alert-error mt-4 hidden">
              <span id="error-text"></span>
            </div>
            <div id="success-message" class="alert alert-success mt-4 hidden">
              <span id="success-text"></span>
            </div>
            <p class="text-center mt-4">
              Already have an account? <a
                href="/customer/login"
                class="link link-primary">Login here</a
              >
            </p>
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  document
    .getElementById("register-form")
    ?.addEventListener("submit", async (e) => {
      e.preventDefault();

      const firstNameInput = document.getElementById(
        "firstName",
      ) as HTMLInputElement;
      const lastNameInput = document.getElementById(
        "lastName",
      ) as HTMLInputElement;
      const emailInput = document.getElementById("email") as HTMLInputElement;
      const passwordInput = document.getElementById(
        "password",
      ) as HTMLInputElement;
      const confirmPasswordInput = document.getElementById(
        "confirmPassword",
      ) as HTMLInputElement;
      const errorDiv = document.getElementById("error-message");
      const errorText = document.getElementById("error-text");
      const successDiv = document.getElementById("success-message");
      const successText = document.getElementById("success-text");

      if (
        !firstNameInput ||
        !lastNameInput ||
        !emailInput ||
        !passwordInput ||
        !confirmPasswordInput ||
        !errorDiv ||
        !errorText ||
        !successDiv ||
        !successText
      )
        return;

      // Hide previous messages
      errorDiv.classList.add("hidden");
      successDiv.classList.add("hidden");

      // Validate passwords match
      if (passwordInput.value !== confirmPasswordInput.value) {
        errorDiv.classList.remove("hidden");
        errorText.textContent = "Passwords do not match";
        return;
      }

      // Validate password strength
      if (passwordInput.value.length < 8) {
        errorDiv.classList.remove("hidden");
        errorText.textContent = "Password must be at least 8 characters long";
        return;
      }

      try {
        const cmsUrl =
          document.documentElement.getAttribute("data-cms-url") ||
          "http://localhost:1337";
        const response = await fetch(`${cmsUrl}/api/customers/register`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            firstName: firstNameInput.value,
            lastName: lastNameInput.value,
            email: emailInput.value,
            password: passwordInput.value,
          }),
        });

        const data = await response.json();

        if (!response.ok) {
          throw new Error(data.error || "Registration failed");
        }

        // Store the customer token
        localStorage.setItem("customerToken", data.token);
        localStorage.setItem("customer", JSON.stringify(data.customer));

        // Check URL parameters for product selection and redirect
        const urlParams = new URLSearchParams(window.location.search);
        const productId = urlParams.get("product");
        const redirectType = urlParams.get("redirect");

        // Check if there's a selected product in localStorage
        const selectedProduct = localStorage.getItem("selectedProduct");

        if ((productId && redirectType === "checkout") || selectedProduct) {
          // Show success message for purchase flow
          successDiv.classList.remove("hidden");
          successText.textContent =
            "Account created successfully! Redirecting to checkout...";

          // Redirect to checkout flow
          setTimeout(async () => {
            const priceId =
              productId ||
              (selectedProduct ? JSON.parse(selectedProduct).priceId : null);
            if (
              priceId &&
              typeof (window as any).proceedToCheckout === "function"
            ) {
              await (window as any).proceedToCheckout(priceId);
            } else {
              window.location.href = "/customer/dashboard";
            }
          }, 2000);
        } else {
          // Normal registration flow
          successDiv.classList.remove("hidden");
          successText.textContent =
            "Account created successfully! Redirecting to dashboard...";

          // Redirect to customer dashboard
          setTimeout(() => {
            window.location.href = "/customer/dashboard";
          }, 2000);
        }
      } catch (error) {
        errorDiv.classList.remove("hidden");
        errorText.textContent =
          error instanceof Error ? error.message : "Registration failed";
      }
    });
</script>
