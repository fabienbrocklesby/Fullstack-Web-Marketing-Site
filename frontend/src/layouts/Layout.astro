---
export interface Props {
  title?: string;
  description?: string;
  keywords?: string;
  image?: string;
  canonical?: string;
  noindex?: boolean;
  nofollow?: boolean;
  ogType?: string; // default website, can be article for blog posts
  structuredData?: Array<Record<string, unknown>>;
  breadcrumbs?: Array<{ name: string; url: string }>;
}

const {
  title = "Lightlane – Laser Engraving Software",
  description = "Lightlane is the faster, smarter, gradient-driven laser engraving software: import → preview → engrave in fewer clicks.",
  keywords = "",
  image = "/og-lightlane.png",
  canonical = Astro.url.href,
  noindex = false,
  nofollow = false,
  ogType = "website",
  structuredData = [],
  breadcrumbs,
} = Astro.props;

// @ts-ignore - Astro injects import.meta.env at build time
import "../styles/app.css"; // ensure Tailwind + daisyUI processed & bundled
import { STRAPI_URL } from "../config/strapi";

const fallbackSite = "https://lightlane.app/";
const siteUrl = Astro.site?.href || fallbackSite;
const absoluteUrl = (path: string) => new URL(path, siteUrl).href;
const canonicalUrl = canonical
  ? new URL(canonical, siteUrl).href
  : Astro.url.href;
const imageUrl = absoluteUrl(image);
const logoUrl = absoluteUrl("/LogoHorizontal.webp");
const organizationId = `${absoluteUrl("/")}#organization`;
const websiteId = `${absoluteUrl("/")}#website`;

const baseStructuredData = [
  {
    "@context": "https://schema.org",
    "@type": "Organization",
    "@id": organizationId,
    name: "Lightlane",
    url: absoluteUrl("/"),
    logo: {
      "@type": "ImageObject",
      url: logoUrl,
    },
    contactPoint: [
      {
        "@type": "ContactPoint",
        contactType: "customer support",
        email: "support@lightlane.app",
        availableLanguage: ["en"],
        areaServed: "Worldwide",
      },
      {
        "@type": "ContactPoint",
        contactType: "sales",
        email: "sales@lightlane.app",
        availableLanguage: ["en"],
        areaServed: "Worldwide",
      },
      {
        "@type": "ContactPoint",
        contactType: "partnership",
        email: "partners@lightlane.app",
        availableLanguage: ["en"],
        areaServed: "Worldwide",
      },
    ],
  },
  {
    "@context": "https://schema.org",
    "@type": "WebSite",
    "@id": websiteId,
    url: absoluteUrl("/"),
    name: "Lightlane",
    description,
    inLanguage: "en-US",
    publisher: { "@id": organizationId },
  },
];

const breadcrumbStructuredData =
  Array.isArray(breadcrumbs) && breadcrumbs.length > 0
    ? {
        "@context": "https://schema.org",
        "@type": "BreadcrumbList",
        itemListElement: breadcrumbs.map((crumb, index) => ({
          "@type": "ListItem",
          position: index + 1,
          name: crumb.name,
          item: absoluteUrl(crumb.url),
        })),
      }
    : null;

const combinedStructuredData = [
  ...baseStructuredData,
  ...(breadcrumbStructuredData ? [breadcrumbStructuredData] : []),
  ...structuredData,
].filter(Boolean);
---

<!doctype html>
<html lang="en" data-cms-url={STRAPI_URL} data-theme="lightlane">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- Favicons -->
    <link rel="icon" href="/AppIcon.ico" sizes="any" />
    <link rel="shortcut icon" href="/AppIcon.ico" />
    <!-- Apple Touch Icon (keep existing PNG if present; generate 180x180 PNG from AppIcon if not) -->
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <!-- Web App Manifest -->
    <link rel="manifest" href="/site.webmanifest" />
    <!-- Optional: Safari pinned tab (provide a monochrome SVG named safari-pinned-tab.svg if available) -->
    <!-- <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#0F172A" /> -->
    <meta name="theme-color" content="#ffffff" />
    <link rel="canonical" href={canonicalUrl} />

    <!-- SEO Meta Tags -->
    <title>{title}</title>
    <meta name="description" content={description} />
    {keywords && <meta name="keywords" content={keywords} />}
    <meta
      name="robots"
      content={`${noindex ? "noindex" : "index"}, ${nofollow ? "nofollow" : "follow"}`}
    />
    <meta name="application-name" content="Lightlane" />
    <meta name="author" content="Lightlane" />

    <!-- Open Graph -->
    <meta property="og:type" content={ogType} />
    <meta property="og:site_name" content="Lightlane" />
    <meta property="og:locale" content="en_US" />
    <meta property="og:url" content={canonicalUrl} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={imageUrl} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:image:alt" content={`Preview image for ${title}`} />

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:url" content={canonicalUrl} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={imageUrl} />
    <meta name="twitter:image:alt" content={`Preview image for ${title}`} />
    <link
      rel="alternate"
      type="application/rss+xml"
      title="Blog RSS"
      href="/blog/rss.xml"
    />
    {
      combinedStructuredData.map((schema) => (
        <script
          type="application/ld+json"
          is:inline
          set:html={JSON.stringify(schema)}
        />
      ))
    }
    <slot name="headExtensions" />

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"
      rel="stylesheet"
    />

    <meta name="generator" content={Astro.generator} />
  </head>
  <body>
    <slot />

    <!-- Authentication Guard -->
    <script src="/auth-guard.js" is:inline></script>

    <!-- Journey Tracking System -->
    <script src="/journey-tracker.js" is:inline></script>
  </body>
</html>
